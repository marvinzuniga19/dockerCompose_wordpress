version: "3.9"  # Latest supported version for wider compatibility

networks:
  ds-wordpress-net:  # Clear and descriptive network name

services:
  mysql:
    image: mysql:8.0  # Use a recent and secure MySQL version (consider 8.0.30 for stability)
    container_name: ds-wordpress-mysql
    restart: unless-stopped  # Restart container automatically on crashes
    volumes:
      - mysql-data:/var/lib/mysql  # Named volume for persistent data
    environment:
      MYSQL_ROOT_PASSWORD: "your_strong_password"  # Enforce strong password with letters, numbers, and symbols
      MYSQL_DATABASE: wordpress
      MYSQL_USER: marvin
      MYSQL_PASSWORD: "your_strong_password"
    networks:
      - ds-wordpress-net

  server:
    image: wordpress:latest  # Leverage latest stable WordPress image
    container_name: ds-wordpress
    ports:
      - "80:80"  # Standard port mapping for web access
    volumes:
      - wordpress-data:/var/www/html  # Named volume for persistent WordPress content
    environment:
      WORDPRESS_DB_USER: marvin
      WORDPRESS_DB_PASSWORD: "your_strong_password"
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_HOST: mysql  # Simplified hostname within network
    depends_on:
      - mysql  # Ensure MySQL is up before starting WordPress
    networks:
      - ds-wordpress-net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest  # Use latest stable phpMyAdmin image
    container_name: ds-phpmyadmin
    ports:
      - "8081:80"  # Unique port mapping for easier access (avoid conflicts with WordPress)
    environment:
      PMA_HOST: mysql  # Simplified hostname within network
      MYSQL_ROOT_PASSWORD: "your_strong_password"
    depends_on:
      - mysql  # Ensure MySQL is up before starting phpMyAdmin
    networks:
      - ds-wordpress-net

# Define volumes for persistence (outside service definitions)
volumes:
  mysql-data: {}  # Empty dictionary for volume creation
  wordpress-data: {}  # Empty dictionary for volume creation

